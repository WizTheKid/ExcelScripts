function main(workbook: ExcelScript.Workbook) {
    // Get the active worksheet and used range.
    let selectedCell = workbook.getActiveCell();
    let selectedSheet = workbook.getActiveWorksheet();

    // Find the used range in the active sheet.
    let usedRange = selectedSheet.getUsedRange();

    // Get the values from the used range.
    let values = usedRange.getValues();
    let rowCount = 0;   
    // Create a new worksheet.
    
    let newSheet = workbook.addWorksheet("Sheet1");   

    // Copy the header row to the new worksheet.
    //newSheet.getRange("A1:H1").setValues([values[0]]);

    // Filter and copy the rows based on the "Name" column.    
    for (let i = 1; i < values.length; i++) {
        let name = values[i][1]; // Assuming "Name" column is the second column (index 1)
      if (name.toString().includes("Cylinder") === false && name.toString().includes("Plane") === false && name.toString().includes("Circle") === false) {
          if (values[i][0].toString().includes("Circle") === true){            
            newSheet.getCell(rowCount, 0).setValue(name + "_Dia")
            newSheet.getCell(rowCount, 1).setValue(values[i][2])
            newSheet.getCell(rowCount, 1).setNumberFormat("0.0000000");
            newSheet.getCell(rowCount, 2).setValue("in")
            rowCount = rowCount + 1;
            //newSheet.getCell(rowCount, 0).setValue(values[i][0])   
            newSheet.getCell(rowCount, 0).setValue(name + "_X")
            newSheet.getCell(rowCount, 1).setValue(values[i][3])
            newSheet.getCell(rowCount, 1).setNumberFormat("0.0000000");
            newSheet.getCell(rowCount, 2).setValue("in")
            rowCount = rowCount + 1;
            //newSheet.getCell(rowCount, 0).setValue(values[i][0])   
            newSheet.getCell(rowCount, 0).setValue(name + "_Y")
            newSheet.getCell(rowCount, 1).setValue(values[i][4])
            newSheet.getCell(rowCount, 1).setNumberFormat("0.0000000");
            newSheet.getCell(rowCount, 2).setValue("in")
            rowCount = rowCount + 1;
          }
          if (values[i][0].toString().includes("Cylinder") === true) {           
            //newSheet.getRange("A" + rowCount.toString() + ":H" + rowCount.toString()).setValues([values[i]]);
            //newSheet.getCell(rowCount, 0).setValue(values[i][0])            
            newSheet.getCell(rowCount, 0).setValue(name + "_X")
            newSheet.getCell(rowCount, 1).setValue(values[i][2])
            newSheet.getCell(rowCount, 1).setNumberFormat("0.0000000");
            newSheet.getCell(rowCount, 2).setValue("in")
            rowCount = rowCount + 1;
            //newSheet.getCell(rowCount, 0).setValue(values[i][0])   
            newSheet.getCell(rowCount, 0).setValue(name + "_Y")
            newSheet.getCell(rowCount, 1).setValue(values[i][3])
            newSheet.getCell(rowCount, 1).setNumberFormat("0.0000000");
            newSheet.getCell(rowCount, 2).setValue("in")
            rowCount = rowCount + 1;
            //newSheet.getCell(rowCount, 0).setValue(values[i][0])   
            newSheet.getCell(rowCount, 0).setValue(name + "_Dia")
            newSheet.getCell(rowCount, 1).setValue(values[i][8])
            newSheet.getCell(rowCount, 1).setNumberFormat("0.0000000");
            newSheet.getCell(rowCount, 2).setValue("in")
            rowCount = rowCount + 1;
          }     
          if (values[i][0].toString().includes("Plane") === true) {         
            //newSheet.getRange("A" + rowCount.toString() + ":H" + rowCount.toString()).setValues([values[i]]);
            //newSheet.getCell(rowCount, 0).setValue(values[i][0])            
            newSheet.getCell(rowCount, 0).setValue(name + "_Z")
            newSheet.getCell(rowCount, 1).setValue(values[i][4])
            newSheet.getCell(rowCount, 1).setNumberFormat("0.0000000");
            newSheet.getCell(rowCount, 2).setValue("in")
            rowCount = rowCount + 1;        
          }   
      }
    }  

    let newValues = newSheet.getUsedRange().getValues();
    for (let i = 1; i < newValues.length; i++) {
        let bNumber = newSheet.getCell(i, 1).getValue();
        if(bNumber < 0){
          newSheet.getCell(i, 3).setValue("NEGATIVE VALUE;");
          newSheet.getCell(i, 1).setValue("=ABS(" + newSheet.getCell(i, 1).getValue() + ")")
        }
        console.log(bNumber);
    }

    newSheet.activate();
}
